{"version":3,"sources":["components/Card.js","components/CardList.js","actions/types.js","components/SearchBox.js","actions/actions.js","components/Scroll.js","components/Header.js","App.js","reducers/robot.js","reducers/search.js","reducers/index.js","store.js","index.js"],"names":["Card","robot","id","name","email","className","src","alt","connect","state","searchField","search","robots","filteredRobots","filter","toLowerCase","includes","map","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","dispatch","type","payload","placeholder","onChange","e","target","value","Scroll","props","style","overflowY","border","height","children","Header","isPending","error","requestRobots","a","axios","get","res","data","useEffect","initialState","action","searchRobots","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd5fe5d0.chunk.js","sourcesContent":["import React from 'react';\n\n// destructuring values from props\nconst Card = ({ robot: { id, name, email } }) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt='robots' />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport { connect } from 'react-redux';\n\nconst CardList = ({ searchField, robots }) => {\n\tconst filteredRobots = robots.filter(robot => {\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t{filteredRobots.map(robot => {\n\t\t\t\treturn <Card key={robot.id} robot={robot} />;\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = state => ({\n\tsearchField: state.search.searchField,\n\trobots: state.robot.robots,\n});\n\nexport default connect(mapStateToProps)(CardList);\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField } from '../actions/actions';\n\nconst SearchBox = ({ setSearchField }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search'\n\t\t\t\tplaceholder='search robots'\n\t\t\t\tonChange={e => setSearchField(e.target.value)}\n\t\t\t\tname='searchfield'\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default connect(null, { setSearchField })(SearchBox);\n","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_FAILED,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS\n} from './types';\nimport axios from 'axios';\n\nexport const setSearchField = text => dispatch => {\n\tdispatch({\n\t\ttype: CHANGE_SEARCH_FIELD,\n\t\tpayload: text\n\t});\n};\n\n// get robots and dispatch response\nexport const requestRobots = () => async dispatch => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: REQUEST_ROBOTS_PENDING\n\t\t});\n\n\t\tconst res = await axios.get('https://jsonplaceholder.typicode.com/users/');\n\t\tconst data = res.data;\n\n\t\tdispatch({\n\t\t\ttype: REQUEST_ROBOTS_SUCCESS,\n\t\t\tpayload: data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: REQUEST_ROBOTS_FAILED,\n\t\t\tpayload: err\n\t\t});\n\t}\n};\n","import React from 'react';\n\nconst Scroll = props => {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\toverflowY: 'scroll',\n\t\t\t\tborder: '1px solid black',\n\t\t\t\theight: '800px'\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;\n","import React from 'react';\n\nconst Header = () => {\n\treturn <h1 className='f1'>RoboFriends</h1>;\n};\n\nexport default Header;\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\nimport Scroll from './components/Scroll';\nimport Header from './components/Header';\n\n// redux stuff\nimport { requestRobots } from './actions/actions';\n\n// Css stuff\nimport 'tachyons';\nimport './app.css';\n\n// destructure props instead of props.isPending\nconst App = ({ isPending, requestRobots }) => {\n\tuseEffect(() => {\n\t\trequestRobots();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<div className='tc'>\n\t\t\t<Header />\n\t\t\t<SearchBox />\n\t\t\t<Scroll>{isPending ? <h1>LOADING</h1> : <CardList />}</Scroll>\n\t\t</div>\n\t);\n};\n\n// state from the store\nconst mapStateToProps = state => ({\n\tisPending: state.robot.isPending,\n\terror: state.robot.error,\n});\n\n// to connect react / redux (state, actions)\nexport default connect(mapStateToProps, { requestRobots })(App);\n","import {\n\tREQUEST_ROBOTS_FAILED,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS\n} from '../actions/types';\n\nconst initialState = {\n\trobots: [],\n\tisPending: false,\n\terror: ''\n};\n\nconst requestRobots = (state = initialState, action) => {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisPending: true\n\t\t\t};\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trobots: payload,\n\t\t\t\tisPending: false\n\t\t\t};\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: payload,\n\t\t\t\tisPending: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default requestRobots;\n","import { CHANGE_SEARCH_FIELD } from '../actions/types';\n\nconst initialState = {\n\tsearchField: ''\n};\n\n// searchField reducers\nconst searchRobots = (state = initialState, action) => {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchField: payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default searchRobots;\n","import { combineReducers } from 'redux';\n\nimport robot from './robot';\nimport search from './search';\n\nexport default combineReducers({\n\tsearch,\n\trobot\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}